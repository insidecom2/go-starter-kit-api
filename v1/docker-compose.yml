services:
  postgres:
    container_name: "postgres"
    image: postgres:17.1
    ports:
      - "54322:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - pgdatabase:/var/lib/postgres/data/
    platform: linux/amd64
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - go_api_network

  api-app:
    container_name: "go-app-api"
    build:
      context: .
      dockerfile: DockerfileDev
    stdin_open: true
    tty: true
    ports:
      - 8000:8000
    volumes:
      - .:/app/api/go-app-api
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    networks:
      - go_api_network

  migrate:
    container_name: "migrate"
    build:
      context: .
      dockerfile: DockerfileDev
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    volumes:
      - .:/app/api/go-app-api
    entrypoint:
      [
        "goose",
        "-dir",
        "src/migrations/postgres",
        "postgres",
        "postgres://postgres:postgres@postgres:5432/postgres",
        "up",
      ]
    networks:
      - go_api_network

volumes:
  pgdatabase:
    driver: local

networks:
  go_api_network:
